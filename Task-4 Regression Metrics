{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM0bGrxL3VL0Lj/+D39zGEp",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Moksha-nagraj/Marvel_tasks_lv1/blob/main/task4_Regression_Metrics.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Regression metrics**\n",
        "Regression models are another family of machine learning and statistical models, which are used to predict a continuous target values.\n",
        "##### **Types of Regression Metrics**\n",
        "1. Mean Absolute Error (MAE)\n",
        "2. Mean Squared Error (MSE)\n",
        "3. Root Mean Squared Error (RMSE)\n",
        "\n",
        "## Mean Absolute Error (MAE)\n",
        "\n",
        "\n",
        "*   It essentially finds the average squared error between the predicted and actual values.\n",
        "*   Mathematical Formula to calculate MAE for a data with “n” data points is:\n",
        "![alt mae](https://tse1.mm.bing.net/th?id=OIP.cgC5TY_-8wANQDUVuv-jVAHaCX&pid=Api&P=0&h=180)\n",
        "\n",
        "Where:\n",
        "\n",
        "y_i: reprsents actual value.\n",
        "\n",
        "y_hati: represents predicted values from the regression model.\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "x3I0VvdueuPB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Mean Squared Error (MSE)\n",
        "\n",
        "\n",
        "*   It measures the square root of the average discrepancies between a dataset’s actual values and projected values.\n",
        "*   Mathematical Formula\n",
        "For a dataset containing ‘n’ data points, the MSE calculation formula is:\n",
        "![alt mse](https://tse1.mm.bing.net/th?id=OIP.0ZA0F8Rm-ccb62D82e9szwHaC1&pid=Api&P=0&h=180)\n"
      ],
      "metadata": {
        "id": "QPjOeMp1nUvr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Root Mean Squared Error (RMSE)\n",
        "\n",
        "\n",
        "*   It is a usually used metric in regression analysis and machine learning to measure the accuracy or goodness of fit of a predictive model, especially when the predictions are continuous numerical values.\n",
        "*   Mathematical Formula for RMSE for a data with ‘n’ data points is as follows:\n",
        "![alt rmse](https://tse3.mm.bing.net/th?id=OIP.DC4mfD2vplwYek--SzcEyQHaCe&pid=Api&P=0&h=180)\n",
        "\n"
      ],
      "metadata": {
        "id": "FsDXwYUQoE5N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#importing Libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.datasets import fetch_california_housing\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
        "\n",
        "# Load the California Housing Prices dataset\n",
        "data = fetch_california_housing()\n",
        "df = pd.DataFrame(data.data, columns=data.feature_names)\n",
        "df['target'] = data.target\n",
        "\n",
        "# Split the data into features (X) and target variable (y)\n",
        "X = df.drop(columns=['target'])\n",
        "y = df['target']\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Create and train the Linear Regression model\n",
        "model = LinearRegression()\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Make predictions on the test set\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Calculate evaluation metrics\n",
        "mae = mean_absolute_error(y_test, y_pred)\n",
        "mse = mean_squared_error(y_test, y_pred)\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Print the evaluation metrics\n",
        "print(\"Mean Absolute Error (MAE):\", mae)\n",
        "print(\"Mean Squared Error (MSE):\", mse)\n",
        "print(\"Root Mean Squared Error (RMSE):\", rmse)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "91286af4-0c54-4266-9d26-f624bfd78563",
        "id": "NreGgYfArkh-"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error (MAE): 0.5332001304956553\n",
            "Mean Squared Error (MSE): 0.5558915986952444\n",
            "Root Mean Squared Error (RMSE): 0.7455813830127764\n"
          ]
        }
      ]
    }
  ]
}
